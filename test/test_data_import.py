import unittest, sys, os
sys.path.append(os.path.abspath("./src"))
import data_import

class TestImport(unittest.TestCase):
    csv = 'test/data/s3.csv'
    row_0 = {
        'V2SOURCECOLLECTIONIDENTIFIER': '1',
        'V2.1SHARINGIMAGE': 'http://wac.450F.edgecastcdn.net/80450F/wjon.com/files/2015/02/on_demand_newscast-300x2004.jpg?w=600&h=0&zc=1&s=0&a=t&q=89',
        'V2SOURCECOMMONNAME': 'wjon.com',
        'V2ENHANCEDTHEMES': 'MANMADE_DISASTER,91;POWER_OUTAGE,91;',
        'GKGRECORDID': '20150218230000-2',
        'V1COUNTS': '', 'V2.1ENHANCEDDATES': '',
        'V2DOCUMENTIDENTIFIER': 'http://wjon.com/wjon-news-on-demand-wednesday-21815-afternoon-news/',
        'V2.1RELATEDIMAGES': 'http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2014/09/Joshua-Akkerman1.jpg;http:/98country.com/files/2011/08/dick_nelson_200x200.jpg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2011/08/bill_henderson_140x1401.jpg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2013/07/dave_overlund_300x300.jpg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2015/02/3o_i45fF.jpeg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2015/02/Alex1.jpg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2011/08/jerry_carlson_200x200.jpg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2014/08/prof.jpg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2011/08/jay_caldwell_200x200.jpg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2011/08/jim_maurice_200x200.jpg;http:/mix949.com/files/2014/03/kelly-3132324301-O1.jpg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2012/11/Lee.jpg;http:/wac.450F.edgecastcdn.net/80450F/wjon.com/files/2015/02/on_demand_newscast-300x2004.jpg',
        'V2.1QUOTATIONS': '',
        'V2ENHANCEDPERSONS': '',
        'V2.1DATE': '20150218230000',
        'V1ORGANIZATIONS': '',
        'V2ENHANCEDLOCATIONS': '',
        'V1LOCATIONS': '',
        'V2.1TRANSLATIONINFO': '',
        'V2.1SOCIALIMAGEEMBEDS': '',
        'V1THEMES': 'MANMADE_DISASTER;MANMADE_DISASTER_WITHOUT_POWER;POWER_OUTAGE;',
        'V2.1SOCIALVIDEOEMBEDS': 'https://youtube.com/channel/;https://youtube.com/user/TSStCloud;https://youtube.com/subscribe_embed?bsv&usegapi=1&channel=TSStCloud&count=hidden;', 'V2.1ALLNAMES': 'Waite Park,125;City Food,233;Adobe Flash Player,348;Charter Channel,554',
        'V2ENHANCEDORGANIZATIONS': '',
        'V2.1COUNTS': '',
        'V1PERSONS': '',
        'V2GCAM': 'wc:93,c12.1:7,c12.10:10,c12.12:5,c12.13:4,c12.14:4,c12.3:3,c12.4:2,c12.5:2,c12.7:7,c12.8:5,c12.9:6,c13.11:2,c14.1:5,c14.10:1,c14.11:8,c14.2:3,c14.3:9,c14.5:7,c14.7:2,c14.9:1,c15.100:1,c15.171:1,c15.172:1,c15.251:1,c15.4:2,c15.62:1,c16.1:2,c16.100:6,c16.101:1,c16.105:1,c16.106:4,c16.109:5,c16.110:15,c16.114:8,c16.115:1,c16.116:11,c16.117:1,c16.118:10,c16.12:10,c16.120:7,c16.121:6,c16.125:7,c16.126:10,c16.127:10,c16.128:1,c16.129:9,c16.130:5,c16.131:10,c16.134:13,c16.137:1,c16.138:2,c16.139:4,c16.140:3,c16.142:1,c16.145:9,c16.146:10,c16.153:11,c16.156:2,c16.157:3,c16.159:13,c16.16:7,c16.161:12,c16.162:7,c16.163:12,c16.164:1,c16.165:1,c16.167:1,c16.18:2,c16.19:2,c16.2:7,c16.21:1,c16.22:3,c16.23:1,c16.24:1,c16.26:18,c16.27:3,c16.29:1,c16.3:3,c16.31:10,c16.32:2,c16.33:12,c16.34:5,c16.35:7,c16.36:1,c16.37:11,c16.38:4,c16.39:1,c16.4:11,c16.41:5,c16.45:4,c16.46:1,c16.47:11,c16.48:5,c16.49:1,c16.5:1,c16.50:2,c16.52:6,c16.53:3,c16.54:2,c16.55:3,c16.57:49,c16.58:7,c16.59:1,c16.6:14,c16.60:1,c16.61:1,c16.62:4,c16.63:3,c16.64:2,c16.65:4,c16.66:4,c16.68:7,c16.69:4,c16.70:8,c16.71:5,c16.72:1,c16.73:2,c16.74:1,c16.75:4,c16.76:4,c16.78:4,c16.79:1,c16.81:1,c16.83:2,c16.84:4,c16.85:2,c16.86:2,c16.87:6,c16.88:15,c16.89:8,c16.9:2,c16.90:3,c16.91:7,c16.92:6,c16.93:3,c16.94:9,c16.95:9,c16.96:2,c16.98:14,c17.1:23,c17.10:13,c17.11:23,c17.12:7,c17.13:1,c17.14:1,c17.15:10,c17.16:10,c17.18:7,c17.19:7,c17.20:4,c17.21:1,c17.23:3,c17.24:9,c17.26:1,c17.27:13,c17.28:3,c17.29:7,c17.3:2,c17.30:4,c17.31:10,c17.32:2,c17.33:5,c17.34:3,c17.35:4,c17.36:11,c17.37:3,c17.38:2,c17.39:10,c17.4:21,c17.40:6,c17.41:5,c17.42:5,c17.43:7,c17.44:2,c17.5:18,c17.7:17,c17.8:13,c17.9:3,c18.162:2,c18.163:2,c18.193:1,c18.199:1,c2.1:5,c2.10:2,c2.101:2,c2.103:1,c2.104:9,c2.11:1,c2.112:2,c2.113:2,c2.114:3,c2.116:2,c2.118:1,c2.119:30,c2.12:4,c2.121:8,c2.122:1,c2.125:3,c2.126:4,c2.127:10,c2.128:9,c2.129:7,c2.132:2,c2.134:1,c2.135:1,c2.138:1,c2.14:7,c2.141:1,c2.142:1,c2.143:6,c2.147:12,c2.148:6,c2.153:3,c2.154:4,c2.155:7,c2.156:5,c2.157:6,c2.158:10,c2.159:3,c2.16:1,c2.160:3,c2.162:1,c2.166:1,c2.168:1,c2.170:1,c2.172:5,c2.173:1,c2.176:2,c2.177:5,c2.179:4,c2.18:4,c2.180:5,c2.181:5,c2.182:1,c2.183:6,c2.185:22,c2.186:1,c2.187:8,c2.19:2,c2.190:3,c2.192:2,c2.193:10,c2.194:2,c2.195:5,c2.196:1,c2.197:4,c2.198:12,c2.199:2,c2.200:1,c2.203:4,c2.204:9,c2.205:2,c2.206:1,c2.207:1,c2.210:10,c2.211:1,c2.213:1,c2.214:3,c2.216:1,c2.217:2,c2.220:3,c2.223:1,c2.224:1,c2.225:3,c2.226:5,c2.227:1,c2.228:2,c2.23:4,c2.25:6,c2.26:1,c2.27:1,c2.30:2,c2.31:5,c2.34:5,c2.35:1,c2.36:1,c2.37:1,c2.39:8,c2.44:5,c2.45:2,c2.46:9,c2.48:1,c2.50:1,c2.52:5,c2.54:6,c2.57:1,c2.58:2,c2.60:1,c2.61:1,c2.62:6,c2.63:1,c2.64:2,c2.65:1,c2.67:1,c2.72:1,c2.73:2,c2.75:13,c2.76:55,c2.77:9,c2.78:14,c2.79:1,c2.80:12,c2.81:2,c2.82:3,c2.86:3,c2.87:1,c2.88:2,c2.89:1,c2.9:4,c2.90:1,c2.93:4,c2.95:17,c2.98:3,c3.1:4,c3.2:6,c4.12:1,c4.23:4,c5.10:12,c5.11:1,c5.12:19,c5.13:2,c5.17:2,c5.18:1,c5.19:2,c5.21:3,c5.22:1,c5.23:1,c5.24:1,c5.26:2,c5.27:1,c5.30:6,c5.35:3,c5.36:3,c5.37:1,c5.4:1,c5.40:6,c5.43:2,c5.44:1,c5.45:1,c5.46:12,c5.47:4,c5.48:1,c5.49:7,c5.50:9,c5.51:7,c5.52:10,c5.53:3,c5.54:3,c5.55:1,c5.57:2,c5.6:8,c5.60:3,c5.61:6,c5.62:32,c5.7:3,c5.8:3,c5.9:5,c6.3:1,c6.5:1,c6.6:2,c7.1:5,c7.2:4,c8.13:1,c8.17:1,c8.20:3,c8.22:1,c8.23:4,c8.25:1,c8.28:1,c8.30:1,c8.36:1,c8.37:2,c8.38:2,c8.4:6,c8.41:1,c8.43:4,c8.6:1,c8.9:2,c9.1:4,c9.1004:1,c9.1005:1,c9.1018:1,c9.1029:2,c9.1038:1,c9.1040:1,c9.107:3,c9.109:1,c9.111:1,c9.113:1,c9.116:1,c9.119:1,c9.123:1,c9.124:1,c9.128:7,c9.129:1,c9.131:1,c9.132:1,c9.134:1,c9.140:1,c9.141:2,c9.145:1,c9.157:1,c9.160:1,c9.162:1,c9.164:2,c9.165:1,c9.166:2,c9.167:1,c9.174:1,c9.177:1,c9.178:1,c9.180:2,c9.182:3,c9.183:1,c9.184:2,c9.188:3,c9.192:2,c9.193:1,c9.195:3,c9.196:1,c9.197:1,c9.198:3,c9.203:1,c9.205:1,c9.207:2,c9.209:1,c9.210:2,c9.215:1,c9.237:1,c9.241:2,c9.250:1,c9.262:2,c9.263:1,c9.269:1,c9.270:3,c9.274:2,c9.276:1,c9.284:1,c9.285:1,c9.286:2,c9.287:1,c9.288:1,c9.296:2,c9.3:4,c9.302:2,c9.303:1,c9.304:2,c9.305:2,c9.306:1,c9.308:1,c9.312:2,c9.316:1,c9.319:1,c9.324:1,c9.33:2,c9.330:1,c9.331:1,c9.333:1,c9.335:1,c9.34:3,c9.344:3,c9.348:3,c9.354:1,c9.358:1,c9.359:1,c9.360:1,c9.363:2,c9.370:2,c9.378:1,c9.382:1,c9.383:1,c9.39:1,c9.394:1,c9.395:1,c9.398:1,c9.4:1,c9.40:1,c9.411:1,c9.420:1,c9.428:1,c9.432:1,c9.433:2,c9.437:3,c9.439:2,c9.441:2,c9.443:2,c9.444:2,c9.445:2,c9.447:1,c9.456:1,c9.458:2,c9.46:1,c9.466:1,c9.476:1,c9.479:1,c9.488:1,c9.49:1,c9.492:1,c9.498:3,c9.5:1,c9.501:1,c9.513:2,c9.530:1,c9.539:2,c9.546:2,c9.549:2,c9.551:1,c9.553:2,c9.554:1,c9.555:2,c9.556:1,c9.557:1,c9.568:1,c9.570:1,c9.571:1,c9.579:5,c9.599:1,c9.600:1,c9.609:1,c9.613:1,c9.624:2,c9.626:1,c9.639:1,c9.640:2,c9.642:1,c9.648:1,c9.653:4,c9.654:1,c9.655:3,c9.658:2,c9.659:2,c9.661:1,c9.663:2,c9.664:1,c9.665:1,c9.668:1,c9.669:1,c9.671:1,c9.679:2,c9.683:1,c9.687:1,c9.699:2,c9.7:1,c9.70:4,c9.701:2,c9.704:2,c9.705:1,c9.708:1,c9.717:2,c9.721:1,c9.722:1,c9.724:1,c9.726:4,c9.730:4,c9.731:1,c9.735:1,c9.740:2,c9.746:1,c9.748:3,c9.750:1,c9.755:1,c9.76:4,c9.762:4,c9.763:2,c9.765:1,c9.766:3,c9.767:7,c9.771:1,c9.778:1,c9.785:1,c9.79:1,c9.790:1,c9.8:1,c9.800:1,c9.802:1,c9.808:1,c9.809:1,c9.817:1,c9.83:5,c9.834:1,c9.838:1,c9.844:1,c9.849:1,c9.860:2,c9.863:1,c9.864:6,c9.868:4,c9.87:1,c9.873:1,c9.874:2,c9.877:3,c9.879:1,c9.88:1,c9.890:1,c9.893:1,c9.901:1,c9.903:2,c9.904:2,c9.908:2,c9.918:1,c9.920:1,c9.923:2,c9.927:1,c9.935:1,c9.946:1,c9.964:1,c9.978:1,c9.980:1,v10.1:0.205528846153846,v10.2:0.365384615384615,v11.1:0.108604930555556,v19.1:6.521,v19.2:5.514,v19.3:5.935,v19.4:6.426,v19.5:5.461,v19.6:5.756,v19.7:6.62,v19.8:5.554,v19.9:6.031,v20.10:-0.625,v20.12:-0.625,v20.13:0.39075,v20.14:-0.458333333333333,v20.15:0.312571428571429,v20.16:-0.40625,v21.1:5.586',
        'V1.5TONE': '0,0,0,0,29.7029702970297,0.99009900990099,93',
        'V2EXTRASXML': '',
        'V2.1AMOUNTS': '500,people were without power,51;'}

    # def test_csv_read(self):
    #     rows = data_import.read_csv(self.csv)
    #     self.assertEqual(rows.next(), self.row_0)

    def test_parse_record(self):
        record = data_import.parse_record(self.row_0)
        self.assertEqual(record['topics'],  ['MANMADE_DISASTER', 'MANMADE_DISASTER_WITHOUT_POWER', 'POWER_OUTAGE'])



if __name__ == '__main__':
    import xmlrunner
    unittest.main(testRunner=xmlrunner.XMLTestRunner(output='test-results'))